openapi: 3.0.3
info:
  title: Swagger Car Rent
  description: |-
    This is API documentation for car rent service
  termsOfService: http://swagger.io/terms/
  contact:
    email: apiteam@swagger.io
  license:
    name: Apache 2.0
    url: http://www.apache.org/licenses/LICENSE-2.0.html
  version: 1.0.11
externalDocs:
  description: Find out more about Swagger
  url: http://swagger.io
servers:
  - url: http://car.loc/api
tags:
  - name: car
    description: Operations about car
    externalDocs:
      description: Find out more
      url: http://swagger.io
  - name: user
    description: Operations about user
    externalDocs:
      description: Find out more
      url: http://swagger.io
paths:
  /car/{carId}/rent:
    post:
      tags:
        - car
      summary: Rent a new car
      description: This endpoint adds new rent for car by user
      operationId: rentCar
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserId'
          application/xml:
            schema:
              $ref: '#/components/schemas/UserId'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/UserId'
        required: true
      parameters:
        - name: carId
          in: path
          description: ID of car to return
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Car'
            application/xml:
              schema:
                $ref: '#/components/schemas/Car'
        '406':
          description: Car is already reserved
  /user/{userId}/drive:
    get:
      tags:
        - user
      summary: Returns pet inventories by status
      description: Returns a map of status codes to quantities
      operationId: getInventory
      parameters:
        - name: userId
          in: path
          description: ID of user to return
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CarActive'
            application/xml:
              schema:
                $ref: '#/components/schemas/CarActive'
        '406':
          description: User does not have active car exception
components:
  schemas:
    UserId:
      type: object
      properties:
        user_id:
          type: integer
          format: int64
          example: 10
      xml:
        name: user_id
    Car:
      required:
        - vin
      type: object
      properties:
        id:
          type: integer
          format: int64
          example: 10
        vin:
          type: string
          example: saepe-occaecati-ex-quisquam
        created_at:
          type: string
          example: 2022-10-27T17:27:52.000000Z
        updated_at:
          type: string
          example: 2022-10-27T17:27:52.000000Z
        user:
          $ref: '#/components/schemas/User'
        car_user:
          $ref: '#/components/schemas/CarUser'
      xml:
        name: car
    CarActive:
      required:
        - vin
      type: object
      properties:
        id:
          type: integer
          format: int64
          example: 10
        vin:
          type: string
          example: saepe-occaecati-ex-quisquam
        created_at:
          type: string
          example: 2022-10-27T17:27:52.000000Z
        updated_at:
          type: string
          example: 2022-10-27T17:27:52.000000Z
        is_active:
          type: boolean
          example: true
      xml:
        name: car_active
    CarUser:
      type: object
      properties:
        id:
          type: integer
          format: int64
          example: 5
        is_active:
          type: boolean
          example: true
        created_at:
          type: string
          example: 2022-10-27T17:27:52.000000Z
        updated_at:
          type: string
          example: 2022-10-27T17:27:52.000000Z
      xml:
        name: car_user
    User:
      type: object
      properties:
        id:
          type: integer
          format: int64
          example: 10
        name:
          type: string
          example: Dr. Christophe Walker MD
        email:
          type: string
          example: john@email.com
        email_verified_at:
          type: string
          example: 2022-10-27T17:27:52.000000Z
        created_at:
          type: string
          example: 2022-10-27T17:27:52.000000Z
        updated_at:
          type: string
          example: 2022-10-27T17:27:52.000000Z
      xml:
        name: user
